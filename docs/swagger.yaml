definitions:
  dto.CreateBookRequest:
    properties:
      author:
        type: string
      cover:
        type: string
      description:
        type: string
      google_books_url:
        type: string
      shelf_id:
        type: string
      title:
        type: string
    required:
    - shelf_id
    - title
    type: object
  dto.CreateShelfRequest:
    properties:
      is_default:
        type: boolean
      type:
        type: string
    required:
    - type
    type: object
  dto.UpdateBookRequest:
    properties:
      author:
        type: string
      cover:
        type: string
      description:
        type: string
      shelf_id:
        type: string
      title:
        type: string
    type: object
  dto.UpdateShelfRequest:
    properties:
      is_default:
        type: boolean
      type:
        type: string
    type: object
  entities.Book:
    properties:
      author:
        type: string
      cover:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      googleBooksUrl:
        type: string
      id:
        type: string
      notes:
        items:
          $ref: '#/definitions/entities.Notes'
        type: array
      progress:
        type: integer
      review:
        $ref: '#/definitions/entities.Review'
      shelfID:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  entities.Notes:
    properties:
      bookID:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  entities.Review:
    properties:
      bookID:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: string
      rating:
        type: number
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  entities.Shelf:
    properties:
      books:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      isDefault:
        type: boolean
      type:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      description: Retrieve all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Book'
            type: array
      summary: Get All Books
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Create book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create Book
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete Book
    get:
      description: Retrieve a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get Book By ID
    put:
      consumes:
      - application/json
      description: Update an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Update book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update Book
  /notes/{book_id}:
    get:
      description: Retrieve all notes
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Notes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Notes
    post:
      consumes:
      - application/json
      description: Create a new note
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: string
      - description: Create note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/entities.Notes'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Notes'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create Note
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete Note
    get:
      description: Retrieve a note by ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Notes'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Note By ID
    put:
      consumes:
      - application/json
      description: Update an existing note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Update note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/entities.Notes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Notes'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update Note
  /reviews/{book_id}:
    get:
      description: Retrieve a review by book ID
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Review'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Review By Book Id
    post:
      consumes:
      - application/json
      description: Create a new review
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: string
      - description: Create review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/entities.Review'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Review'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create Review
  /reviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete Review
    put:
      consumes:
      - application/json
      description: Update an existing review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      - description: Update review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/entities.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Review'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update Review
  /shelves:
    get:
      description: Retrieve all shelves
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Shelf'
            type: array
      summary: Get All Shelves
    post:
      consumes:
      - application/json
      description: Create a new shelf
      parameters:
      - description: Create shelf
        in: body
        name: shelf
        required: true
        schema:
          $ref: '#/definitions/dto.CreateShelfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Shelf'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create Shelf
  /shelves/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing shelf
      parameters:
      - description: Shelf ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete Shelf
    get:
      description: Retrieve a shelf by ID
      parameters:
      - description: Shelf ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Shelf'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get Shelf By ID
    put:
      consumes:
      - application/json
      description: Update an existing shelf
      parameters:
      - description: Shelf ID
        in: path
        name: id
        required: true
        type: string
      - description: Update shelf
        in: body
        name: shelf
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateShelfRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Shelf'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update Shelf
  /shelves/{shelf_id}/books:
    get:
      description: Retrieve all books on a particular shelf
      parameters:
      - description: Shelf ID
        in: path
        name: shelf_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Book'
            type: array
      summary: Get Books By Shelf ID
  /shelves/initial:
    get:
      description: Generate initial shelves
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Shelf'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Generate Initial Shelves
swagger: "2.0"
